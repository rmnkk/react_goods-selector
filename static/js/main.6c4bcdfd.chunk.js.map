{"version":3,"sources":["components/Button/Button.js","components/Good/Good.js","components/GoodsList/GoodsList.js","App.js","index.js"],"names":["Button","handler","good","heading","onClick","type","className","classNames","button_active","Good","GoodsList","goods","map","key","goodsFromServer","App","state","goodName","setState","remove","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kRAKaA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,QAAlB,OACpB,4BACEC,QAAS,WACPH,EAAQC,IAEVG,KAAK,SACLC,UAAWC,IAAW,SAAU,CAC9BC,cAAeN,IAASC,GAAiB,MAG1CD,ICXQO,EAAO,SAAC,GAAD,IAAGP,EAAH,EAAGA,KAAMD,EAAT,EAASA,QAASE,EAAlB,EAAkBA,QAAlB,OAClB,4BACE,kBAAC,EAAD,CAAQD,KAAMA,EAAMD,QAASA,EAASE,QAASA,MCFtCO,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOV,EAAV,EAAUA,QAASE,EAAnB,EAAmBA,QAAnB,OACvB,yBAAKG,UAAU,SACZK,EAAMC,KAAI,SAAAV,GAAI,OACb,yBAAKW,IAAKX,GACR,kBAAC,EAAD,CAAMD,QAASA,EAASC,KAAMA,EAAMC,QAASA,UCJ/CW,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6CaC,E,4MAzCbC,MAAQ,CACNb,QAAS,K,EAGXF,QAAU,SAACgB,GACT,EAAKC,SAAS,CACZf,QAASc,K,EAIbE,OAAS,WACP,EAAKD,SAAS,CACZf,QAAS,O,uDAIH,IACAA,EAAYiB,KAAKJ,MAAjBb,QAER,OACE,yBAAKG,UAAU,OACb,yBAAKA,UAAU,eACb,qDAAuBH,IACvB,4BACEE,KAAK,SACLD,QAASgB,KAAKD,OACdb,UAAU,eAHZ,MAQF,kBAAC,EAAD,CACEL,QAASmB,KAAKnB,QACdU,MAAOG,EACPX,QAASA,S,GAnCDkB,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6c4bcdfd.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Button = ({ handler, good, heading }) => (\n  <button\n    onClick={() => {\n      handler(good);\n    }}\n    type=\"button\"\n    className={classNames('button', {\n      button_active: good === heading ? true : '',\n    })}\n  >\n    {good}\n  </button>\n);\n\nButton.propTypes = {\n  handler: PropTypes.func.isRequired,\n  good: PropTypes.string.isRequired,\n  heading: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../Button';\n\nexport const Good = ({ good, handler, heading }) => (\n  <h3>\n    <Button good={good} handler={handler} heading={heading} />\n  </h3>\n);\n\nGood.propTypes = {\n  good: PropTypes.string.isRequired,\n  handler: PropTypes.func.isRequired,\n  heading: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Good } from '../Good';\n\nexport const GoodsList = ({ goods, handler, heading }) => (\n  <div className=\"goods\">\n    {goods.map(good => (\n      <div key={good}>\n        <Good handler={handler} good={good} heading={heading} />\n      </div>\n    ))}\n  </div>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  handler: PropTypes.func.isRequired,\n  heading: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    heading: '-',\n  }\n\n  handler = (goodName) => {\n    this.setState({\n      heading: goodName,\n    });\n  }\n\n  remove = () => {\n    this.setState({\n      heading: '-',\n    });\n  }\n\n  render() {\n    const { heading } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__header\">\n          <h1>{`Selected good: ${heading}`}</h1>\n          <button\n            type=\"button\"\n            onClick={this.remove}\n            className=\"App__button\"\n          >\n            X\n          </button>\n        </div>\n        <GoodsList\n          handler={this.handler}\n          goods={goodsFromServer}\n          heading={heading}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}